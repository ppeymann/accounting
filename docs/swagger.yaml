definitions:
  accounting.BaseResult:
    properties:
      errors:
        description: Errors provides list off error that occurred in processing request
        items:
          type: string
        type: array
      result:
        description: Result single/array of any type (object/number/string/boolean)
          that returns as response
      result_count:
        description: ResultCount specified number of records that returned in result_count
          field expected result been array.
        type: integer
    type: object
  services.AccountEntity:
    properties:
      bank_account:
        items:
          $ref: '#/definitions/services.BankAccountEntity'
        type: array
      currency_type:
        allOf:
        - $ref: '#/definitions/services.CurrencyType'
        description: CurrencyType is currency type between Rial, Dollar, Dinar, ...
      email:
        description: Email
        type: string
      full_name:
        description: FullName
        type: string
      mobile:
        description: Mobile
        type: string
      password:
        description: Password
        type: string
      user_name:
        description: UserName
        type: string
    type: object
  services.BankAccountEntity:
    properties:
      account_id:
        description: AccountID
        type: integer
      bank_number:
        description: BankNumber
        type: integer
      bank_slug:
        description: BankSlug
        type: string
      name:
        description: Name
        type: string
    type: object
  services.BankAccountInput:
    properties:
      bank_number:
        description: BankNumber
        type: integer
      bank_slug:
        description: BankSlug
        type: string
      name:
        description: Name
        type: string
    type: object
  services.BankEntity:
    properties:
      bank_slug:
        description: BankSlug
        type: string
      name:
        description: Name
        type: string
    type: object
  services.ChangeCurrencyInput:
    properties:
      currency_type:
        allOf:
        - $ref: '#/definitions/services.CurrencyType'
        description: CurrencyType
    type: object
  services.CurrencyType:
    enum:
    - IRT
    - USD
    - EUR
    - AED
    - TRY
    type: string
    x-enum-varnames:
    - Rial
    - Dollar
    - Euro
    - Dirham
    - Lier
  services.DateAndTime:
    properties:
      day:
        type: integer
      hour:
        type: integer
      minute:
        type: integer
      month:
        type: integer
      year:
        type: integer
    type: object
  services.ExpensesEntity:
    properties:
      account_id:
        type: integer
      amount:
        description: Amount
        type: number
      bank_name:
        description: BankName
        type: string
      bank_number:
        description: BankNumber
        type: integer
      category:
        description: Category
        type: string
      day:
        description: Day is day that this expenses is done
        type: integer
      hour:
        description: Hour is hour that this expenses is done
        type: integer
      minute:
        description: Minute is minute that this expenses is done
        type: integer
      month:
        description: Month is month that this expenses is done
        type: integer
      notes:
        description: Notes
        type: string
      year:
        description: Year is year that this expenses is done
        type: integer
    type: object
  services.ExpensesInput:
    properties:
      amount:
        type: number
      bank_name:
        type: string
      bank_number:
        type: integer
      category:
        type: string
      date:
        $ref: '#/definitions/services.DateAndTime'
      note:
        type: string
    type: object
  services.LoginInputDTO:
    properties:
      password:
        description: Password is password for sign up
        type: string
      user_name:
        description: Username is user name for sign up
        type: string
    type: object
  services.NameInput:
    properties:
      full_name:
        description: FullName
        type: string
    type: object
  services.TokenBundleOutput:
    properties:
      expire:
        description: Expire time of Token and CentrifugeToken
        type: string
      refresh:
        description: Refresh token string used for refreshing authentication and give
          fresh token
        type: string
      token:
        description: Token is JWT/PASETO token staring for storing in client side
          as access token
        type: string
    type: object
info:
  contact: {}
paths:
  /account:
    get:
      consumes:
      - application/json
      description: get account
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.AccountEntity'
              type: object
      security:
      - Authenticate Bearer: []
      summary: get account
      tags:
      - account
  /account/change_currency:
    patch:
      consumes:
      - application/json
      description: change currency of account
      parameters:
      - description: currency that is for change
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.ChangeCurrencyInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.AccountEntity'
              type: object
      summary: change currency
      tags:
      - account
  /account/change_name:
    patch:
      consumes:
      - application/json
      description: change name of account
      parameters:
      - description: name that is for change
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.NameInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.AccountEntity'
              type: object
      summary: change name
      tags:
      - account
  /account/signin:
    post:
      consumes:
      - application/json
      description: signing in to account that already signed up
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.LoginInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.TokenBundleOutput'
              type: object
      summary: signing in to account
      tags:
      - account
  /account/signup:
    post:
      consumes:
      - application/json
      description: create new account with specified mobile and expected info
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.LoginInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.TokenBundleOutput'
              type: object
      summary: signing up a new account
      tags:
      - account
  /bank/all:
    get:
      consumes:
      - application/json
      description: get all bank information
      produces:
      - application/json
      responses:
        "200":
          description: Always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/services.BankEntity'
                  type: array
              type: object
      security:
      - Authenticate bearer: []
      summary: get all bank
      tags:
      - bank
  /bank/create:
    post:
      consumes:
      - application/json
      description: create bank account with specified input
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.BankAccountInput'
      produces:
      - application/json
      responses:
        "200":
          description: Always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.BankAccountEntity'
              type: object
      security:
      - Authenticate bearer: []
      summary: create bank account
      tags:
      - bank
  /expenses/create:
    post:
      consumes:
      - application/json
      description: create expenses with expenses input
      parameters:
      - description: expenses input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.ExpensesInput'
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  $ref: '#/definitions/services.ExpensesEntity'
              type: object
      security:
      - Authenticate Bearer: []
      summary: create expenses
      tags:
      - expenses
  /expenses/get_all:
    get:
      consumes:
      - application/json
      description: get all expenses with specified id
      produces:
      - application/json
      responses:
        "200":
          description: always returns status 200 but body contains errors
          schema:
            allOf:
            - $ref: '#/definitions/accounting.BaseResult'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/services.ExpensesEntity'
                  type: array
              type: object
      security:
      - Authenticate Bearer: []
      summary: get all expenses
      tags:
      - expenses
swagger: "2.0"
